name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup environment
        run: ./scripts/setup.sh --ci

      - name: Create new version
        id: upversion
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI: true
        run: just upversion --ci

      - name: Authenticate with registry
        if: steps.upversion.outputs.new_release_published == 'true'
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
          GCP_REGISTRY_PROJECT_ID: ${{ secrets.GCP_REGISTRY_PROJECT_ID }}
          GCP_REGISTRY_REGION: ${{ secrets.GCP_REGISTRY_REGION }}
          GCP_REGISTRY_NAME: ${{ secrets.GCP_REGISTRY_NAME }}
        run: just registry-login --ci

      - name: Publish package
        if: steps.upversion.outputs.new_release_published == 'true'
        env:
          GCP_REGISTRY_PROJECT_ID: ${{ secrets.GCP_REGISTRY_PROJECT_ID }}
          GCP_REGISTRY_REGION: ${{ secrets.GCP_REGISTRY_REGION }}
          GCP_REGISTRY_NAME: ${{ secrets.GCP_REGISTRY_NAME }}
        run: just publish

      - name: Create GitHub Release
        if: steps.upversion.outputs.new_release_published == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.upversion.outputs.new_release_version }}
          generate_release_notes: true
          files: |
            src/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
